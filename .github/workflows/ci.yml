name: Producer SDK Java CI with Maven

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    strategy:
      matrix:
        os:
          - macos-latest
        java:
          - 11

      fail-fast: false

    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven

      - name: Build JNI (mac)
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install log4cplus
          brew unlink openssl

          git clone https://github.com/awslabs/amazon-kinesis-video-streams-producer-sdk-cpp.git --single-branch -b master
          cd amazon-kinesis-video-streams-producer-sdk-cpp
          mkdir build
          cd build
          cmake .. -DBUILD_DEPENDENCIES=OFF -DBUILD_JNI=ON
          make -j$(sysctl -n hw.cpu)

      - name: Build with Maven
        run: mvn clean compile assembly:single

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run tests
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            mvn clean test -DargLine="-Daws.accessKeyId=${AWS_ACCESS_KEY_ID} -Daws.secretKey=${AWS_SECRET_ACCESS_KEY} -Daws.sessionToken=${AWS_SESSION_TOKEN} -Djava.library.path=src/main/resources/lib/ubuntu/ -Dlog4j.configurationFile=log4j2.xml"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            mvn clean test -DargLine="-Daws.accessKeyId=${AWS_ACCESS_KEY_ID} -Daws.secretKey=${AWS_SECRET_ACCESS_KEY} -Daws.sessionToken=${AWS_SESSION_TOKEN} -Djava.library.path=src/main/resources/lib/windows/ -Dlog4j.configurationFile=log4j2.xml"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            mvn clean test -DargLine="-Daws.accessKeyId=${AWS_ACCESS_KEY_ID} -Daws.secretKey=${AWS_SECRET_ACCESS_KEY} -Daws.sessionToken=${AWS_SESSION_TOKEN} -Djava.library.path=src/main/resources/lib/mac/ -Dlog4j.configurationFile=log4j2.xml"
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
        shell: bash
